extends dashb_layout

block dashb
    include dashb_menu
    //.content-card
    .section
        .group-header
            .group-icon-g.smooth(uk-toggle="target: #createGroup")
                .group-icon
                    i(data-feather='plus' style='width:20px; height:20px;')
                .group-txt
                    | Create Group

            .group-icon-g.smooth(uk-toggle="target: #joinGroup")
                .group-icon
                    i(data-feather='users' style='width:20px; height:20px;')
                .group-txt
                    | Join Group

            
            //- .group-search
            //-     form.uk-search.uk-search-default.uk-width-1-1
            //-         input.uk-search-input(type='search' placeholder='Seach Groups...')

    .section
        if groups != null
            for item, i in groups
                - var targetDEL = 'target: #delete' + i
                - var modalDEL = 'delete' + i
                - var school = 'This group belongs to ' + item.school

                .card-holder.three_w(title=school)
                    .uk-card.uk-card-default.uk-card-hover.uk-card-body.card-height.uk-padding-small
                        - var url = '/grouproom/'+item.groupid
                        a(href=url)
                            .card-body.smooth
                                .uk-card-title #{item.groupname}
                                .uk-margin
                                    p Project Progress:
                                    - var num_finish = item.agileboard.finished.length
                                    - var num_progre = item.agileboard.progress.length
                                    - var num_review = item.agileboard.review.length
                                    - var num_todo   = item.agileboard.todo.length
                                    - var val = (num_finish / (num_finish+num_progre+num_review+num_todo)) * 100

                                    progress.uk-progress(value=val max='100')
                        .card-footer
                            if item.owner == udata.email
                                .date-info.fl-left
                                    | #Members: 
                                    .uk-badge #{item.groupmembers.length}
                                .date-info 
                                    span.uk-label.uk-label-danger.selected(uk-toggle=targetDEL) DELETE

                //-delete the group that is own by the owner
                if item.owner == udata.email
                    div.uk-flex-top(id=modalDEL, uk-modal)
                        .uk-modal-dialog.uk-modal-body.uk-margin-auto-vertical
                            button.uk-modal-close-default(type='button', uk-close)
                            .uk-modal-header
                                h2.uk-modal-title DELETE GROUP
                                p Are you sure, you want to delete the group <b>#{item.groupname}</b> ?
                            .uk-modal-footer.uk-text-right
                                form(method='POST', action='/delete_group')
                                    input(type='hidden', name='strGID', value=item.groupid)
                                    button.uk-button.uk-button-primary(type='submit') YES
                                    button.uk-button.uk-modal-close.uk-button-default(type='button') NO




    //-modal for creating and joining groups
    div.uk-flex-top(id="createGroup", uk-modal)
        .uk-modal-dialog.uk-modal-body.uk-margin-auto-vertical
            button.uk-modal-close-default(type='button', uk-close)
            .uk-modal-header
                h2.uk-modal-title Create New Group
            
            .uk-modal-body
                form.uk-grid-small(method='POST', action='/create_group')
                    .uk-width-1-1
                        label(for='groupName') Enter Group Name:
                        input.uk-input(name='groupName', type='text', required)

                    .uk-margin
                        .uk-text-right
                            button.uk-button.uk-button-primary(name='btncreateGroup', type='submit') CREATE GROUP
            

    div.uk-flex-top(id="joinGroup", uk-modal)
        .uk-modal-dialog.uk-modal-body.uk-margin-auto-vertical
            button.uk-modal-close-default(type='button', uk-close)
            .uk-modal-header
                h2.uk-modal-title Join Group

            .uk-modal-body
                form.uk-grid-small(method='POST', action='/join_group')
                    .uk-width-1-1
                        label(for='groupID') Enter Group ID:
                        input.uk-input(name='groupID', type='password' required)

                    .uk-margin
                        .uk-text-right
                            button.uk-button.uk-button-primary(name='btnjoinGroup', type='submit') JOIN GROUP


    if (alert == 'added')
        script.
            UIkit.notification({message: 'Group Added', status: 'primary', pos: 'top-center'})

    if (alert == 'deleted')
        script.
            UIkit.notification({message: 'Group Deleted', status: 'primary', pos: 'top-center'})

    if (alert == 'error')
        script.
            UIkit.notification({message: 'Something went wrong, try again', status: 'warning', pos: 'top-center'})

    if (alert == 'invalidid')
        script.
            UIkit.notification({message: 'Invalid groupID, makesure you enter the correct groupID', status: 'danger', pos: 'top-center'})

    if (alert == 'registered')
        script.
            UIkit.notification({message: 'You are already registered', status: 'primary', pos: 'top-center'})

    if (alert == 'univerr')
        script.
            UIkit.notification({message: 'Error, you need to set your university/college: <a href=\'/settings\'>Set University/College</a>', status: 'warning', pos: 'top-center'})
